From 7243f31a3c03cce232ebaab7e62aba43ea6de9a3 Mon Sep 17 00:00:00 2001
From: maxwen <max.weninger@gmail.com>
Date: Sun, 1 Dec 2019 03:06:50 +0100
Subject: [PATCH] SystemUI: old style mobile data type indicator layout update

Change-Id: Iaa0112f97b72c66d6a7cbba63072416eb0740088
---
 .../res/drawable/stat_sys_roaming.xml         |  4 +-
 .../layout/status_bar_mobile_signal_group.xml | 15 +++--
 packages/SystemUI/res/values/aicp_dimens.xml  |  7 ++-
 .../statusbar/StatusBarMobileView.java        | 55 +++++++++++--------
 4 files changed, 51 insertions(+), 30 deletions(-)

diff --git a/packages/SystemUI/res/drawable/stat_sys_roaming.xml b/packages/SystemUI/res/drawable/stat_sys_roaming.xml
index 0dd9f5a39f9..d7151c67176 100644
--- a/packages/SystemUI/res/drawable/stat_sys_roaming.xml
+++ b/packages/SystemUI/res/drawable/stat_sys_roaming.xml
@@ -14,8 +14,8 @@
      limitations under the License.
 -->
 <vector xmlns:android="http://schemas.android.com/apk/res/android"
-        android:width="@dimen/signal_icon_size"
-        android:height="@dimen/signal_icon_size"
+        android:width="14dp"
+        android:height="14dp"
         android:viewportWidth="17"
         android:viewportHeight="17">
 
diff --git a/packages/SystemUI/res/layout/status_bar_mobile_signal_group.xml b/packages/SystemUI/res/layout/status_bar_mobile_signal_group.xml
index 14eab7c3a32..5567d604de3 100644
--- a/packages/SystemUI/res/layout/status_bar_mobile_signal_group.xml
+++ b/packages/SystemUI/res/layout/status_bar_mobile_signal_group.xml
@@ -75,23 +75,30 @@
         <FrameLayout
             android:id="@+id/mobile_signal_type"
             android:layout_width="@dimen/status_bar_mobile_signal_width"
-            android:layout_height="wrap_content"
+            android:layout_height="@dimen/status_bar_mobile_signal_with_type_width"
             android:layout_gravity="center_vertical">
             <com.android.systemui.statusbar.AnimatedImageView
                 android:id="@+id/mobile_signal"
                 android:layout_height="wrap_content"
                 android:layout_width="wrap_content"
                 systemui:hasOverlappingRendering="false"
-                android:layout_gravity="end"
+                android:layout_gravity="end|center_vertical"
             />
             <ImageView
                 android:id="@+id/mobile_roaming"
                 android:layout_width="wrap_content"
-                android:layout_height="@dimen/status_bar_mobile_type_height"
+                android:layout_height="wrap_content"
                 android:src="@drawable/stat_sys_roaming"
                 android:contentDescription="@string/data_connection_roaming"
                 android:visibility="gone"
-                android:scaleType="centerInside"
+                android:layout_gravity="center_vertical"/>
+            <ImageView
+                android:id="@+id/mobile_type_small"
+                android:layout_width="wrap_content"
+                android:layout_height="@dimen/status_bar_mobile_type_height"
+                android:src="@drawable/stat_sys_roaming"
+                android:visibility="gone"
+                android:scaleType="fitStart"
                 android:layout_gravity="start|top" />
         </FrameLayout>
     </com.android.keyguard.AlphaOptimizedLinearLayout>
diff --git a/packages/SystemUI/res/values/aicp_dimens.xml b/packages/SystemUI/res/values/aicp_dimens.xml
index 1c4431a3ee0..97011e0e046 100644
--- a/packages/SystemUI/res/values/aicp_dimens.xml
+++ b/packages/SystemUI/res/values/aicp_dimens.xml
@@ -129,7 +129,10 @@
     <dimen name="data_usage_padding_start">4dp</dimen>
 
     <!-- Old mobile signal -->
-    <dimen name="status_bar_mobile_signal_with_type_width">22dp</dimen>
+    <dimen name="status_bar_mobile_signal_with_type_width">18dp</dimen>
     <dimen name="status_bar_mobile_signal_width">16dp</dimen>
-    <dimen name="status_bar_mobile_type_height">10dp</dimen>
+    <dimen name="status_bar_mobile_type_height">8dp</dimen>
+    <dimen name="status_bar_mobile_type_padding">2dp</dimen>
+    <dimen name="status_bar_mobile_type_padding_limit">10dp</dimen>
+
 </resources>
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/StatusBarMobileView.java b/packages/SystemUI/src/com/android/systemui/statusbar/StatusBarMobileView.java
index 6445dfcde3d..bf3f6517ec1 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/StatusBarMobileView.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/StatusBarMobileView.java
@@ -63,6 +63,7 @@ public class StatusBarMobileView extends FrameLayout implements DarkReceiver,
     private DualToneHandler mDualToneHandler;
     private ImageView mVolte;
     private boolean mOldStyleType;
+    private ImageView mMobileTypeSmall;
 
     public static StatusBarMobileView fromContext(Context context, String slot) {
         LayoutInflater inflater = LayoutInflater.from(context);
@@ -115,6 +116,7 @@ public class StatusBarMobileView extends FrameLayout implements DarkReceiver,
         mInoutContainer = findViewById(R.id.inout_container);
         mVolte = findViewById(R.id.mobile_volte);
         mMobileSignalType = findViewById(R.id.mobile_signal_type);
+        mMobileTypeSmall = findViewById(R.id.mobile_type_small);
 
         mMobileDrawable = new SignalDrawable(getContext());
         mMobile.setImageDrawable(mMobileDrawable);
@@ -164,27 +166,28 @@ public class StatusBarMobileView extends FrameLayout implements DarkReceiver,
         if (mState.typeId > 0) {
             if (mOldStyleType) {
                 mMobileType.setVisibility(View.GONE);
-                mMobileRoaming.setContentDescription(mState.typeContentDescription);
-                mMobileRoaming.setImageResource(mState.typeId);
-                mMobileRoaming.setVisibility(View.VISIBLE);
+                mMobileTypeSmall.setContentDescription(mState.typeContentDescription);
+                mMobileTypeSmall.setImageResource(mState.typeId);
+                mMobileTypeSmall.setVisibility(View.VISIBLE);
                 showRoamingSpace = true;
                 setMobileSignalWidth(false);
             } else {
                 mMobileType.setContentDescription(mState.typeContentDescription);
                 mMobileType.setImageResource(mState.typeId);
                 mMobileType.setVisibility(View.VISIBLE);
-                mMobileRoaming.setVisibility(View.GONE);
+                mMobileTypeSmall.setVisibility(View.GONE);
                 setMobileSignalWidth(true);
             }
         } else {
             mMobileType.setVisibility(View.GONE);
-            mMobileRoaming.setVisibility(View.GONE);
+            mMobileTypeSmall.setVisibility(View.GONE);
             setMobileSignalWidth(true);
         }
         if (mState.roaming) {
-            mMobileRoaming.setImageResource(R.drawable.stat_sys_roaming);
-            mMobileRoaming.setVisibility(View.VISIBLE);
+            mMobileTypeSmall.setVisibility(View.GONE);
+            setMobileSignalWidth(true);
         }
+        mMobileRoaming.setVisibility(mState.roaming ? View.VISIBLE : View.GONE);
         mMobileRoamingSpace.setVisibility(mState.roaming || showRoamingSpace ? View.VISIBLE : View.GONE);
         mIn.setVisibility(mState.activityIn ? View.VISIBLE : View.GONE);
         mOut.setVisibility(mState.activityOut ? View.VISIBLE : View.GONE);
@@ -205,7 +208,12 @@ public class StatusBarMobileView extends FrameLayout implements DarkReceiver,
                         R.dimen.status_bar_mobile_signal_width);
         } else {
             p.width = mContext.getResources().getDimensionPixelSize(
-                        R.dimen.status_bar_mobile_signal_with_type_width);
+                    R.dimen.status_bar_mobile_signal_with_type_width);
+            int paddingLimit = mContext.getResources().getDimensionPixelSize(
+                    R.dimen.status_bar_mobile_type_padding_limit);
+            int padding = mMobileTypeSmall.getWidth() < paddingLimit ?
+                    mContext.getResources().getDimensionPixelSize(R.dimen.status_bar_mobile_type_padding) : 0;
+            mMobileTypeSmall.setPadding(padding, 0, 0, 0);
         }
         mMobileSignalType.setLayoutParams(p);
     }
@@ -227,28 +235,29 @@ public class StatusBarMobileView extends FrameLayout implements DarkReceiver,
             if (state.typeId != 0) {
                 if (oldStyleType) {
                     mMobileType.setVisibility(View.GONE);
-                    mMobileRoaming.setContentDescription(state.typeContentDescription);
-                    mMobileRoaming.setImageResource(state.typeId);
-                    mMobileRoaming.setVisibility(View.VISIBLE);
+                    mMobileTypeSmall.setContentDescription(state.typeContentDescription);
+                    mMobileTypeSmall.setImageResource(state.typeId);
+                    mMobileTypeSmall.setVisibility(View.VISIBLE);
                     showRoamingSpace = true;
                     setMobileSignalWidth(false);
                 } else {
                     mMobileType.setContentDescription(state.typeContentDescription);
                     mMobileType.setImageResource(state.typeId);
                     mMobileType.setVisibility(View.VISIBLE);
-                    mMobileRoaming.setVisibility(View.GONE);
+                    mMobileTypeSmall.setVisibility(View.GONE);
                     setMobileSignalWidth(true);
                 }
             } else {
                 mMobileType.setVisibility(View.GONE);
-                mMobileRoaming.setVisibility(View.GONE);
+                mMobileTypeSmall.setVisibility(View.GONE);
                 setMobileSignalWidth(true);
             }
         }
         if (state.roaming) {
-            mMobileRoaming.setImageResource(R.drawable.stat_sys_roaming);
-            mMobileRoaming.setVisibility(View.VISIBLE);
+            mMobileTypeSmall.setVisibility(View.GONE);
+            setMobileSignalWidth(true);
         }
+        mMobileRoaming.setVisibility(state.roaming ? View.VISIBLE : View.GONE);
         mMobileRoamingSpace.setVisibility(showRoamingSpace || state.roaming ? View.VISIBLE : View.GONE);
         mIn.setVisibility(state.activityIn ? View.VISIBLE : View.GONE);
         mOut.setVisibility(state.activityOut ? View.VISIBLE : View.GONE);
@@ -283,6 +292,7 @@ public class StatusBarMobileView extends FrameLayout implements DarkReceiver,
         mIn.setImageTintList(color);
         mOut.setImageTintList(color);
         mMobileType.setImageTintList(color);
+        mMobileTypeSmall.setImageTintList(color);
         mMobileRoaming.setImageTintList(color);
         mVolte.setImageTintList(color);
         mDotView.setDecorColor(tint);
@@ -311,6 +321,7 @@ public class StatusBarMobileView extends FrameLayout implements DarkReceiver,
         mMobileType.setImageTintList(list);
         mMobileRoaming.setImageTintList(list);
         mVolte.setImageTintList(list);
+        mMobileTypeSmall.setImageTintList(list);
         mDotView.setDecorColor(color);
     }
 
@@ -371,28 +382,28 @@ public class StatusBarMobileView extends FrameLayout implements DarkReceiver,
             if (mState.typeId != 0) {
                 if (oldStyleType) {
                     mMobileType.setVisibility(View.GONE);
-                    mMobileRoaming.setContentDescription(mState.typeContentDescription);
-                    mMobileRoaming.setImageResource(mState.typeId);
-                    mMobileRoaming.setVisibility(View.VISIBLE);
+                    mMobileTypeSmall.setContentDescription(mState.typeContentDescription);
+                    mMobileTypeSmall.setImageResource(mState.typeId);
+                    mMobileTypeSmall.setVisibility(View.VISIBLE);
                     showRoamingSpace = true;
                     setMobileSignalWidth(false);
                 } else {
                     mMobileType.setContentDescription(mState.typeContentDescription);
                     mMobileType.setImageResource(mState.typeId);
                     mMobileType.setVisibility(View.VISIBLE);
-                    mMobileRoaming.setVisibility(View.GONE);
                     setMobileSignalWidth(true);
                 }
             } else {
                 mMobileType.setVisibility(View.GONE);
-                mMobileRoaming.setVisibility(View.GONE);
+                mMobileTypeSmall.setVisibility(View.GONE);
                 setMobileSignalWidth(true);
             }
         }
         if (mState.roaming) {
-            mMobileRoaming.setImageResource(R.drawable.stat_sys_roaming);
-            mMobileRoaming.setVisibility(View.VISIBLE);
+            mMobileTypeSmall.setVisibility(View.GONE);
+            setMobileSignalWidth(true);
         }
+        mMobileRoaming.setVisibility(mState.roaming ? View.VISIBLE : View.GONE);
         mMobileRoamingSpace.setVisibility(showRoamingSpace || mState.roaming ? View.VISIBLE : View.GONE);
         mIn.setVisibility(mState.activityIn ? View.VISIBLE : View.GONE);
         mOut.setVisibility(mState.activityOut ? View.VISIBLE : View.GONE);
