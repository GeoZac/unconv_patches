From 97d3ac26e91d09f891a3e6712db16cf053818245 Mon Sep 17 00:00:00 2001
From: El Dainosor <eldainosor@gmail.com>
Date: Sat, 9 Nov 2019 20:04:52 +0000
Subject: [PATCH] base: Add Lockscreen cover art filter

> Grayscale: to highlight the notifications colors
> Grayscale but accent tinted: To highlight accent colors
> Blur: An actual blur over the image
> Grayscale Blur: The previous blur but untinted to highligh notif colors
> Gradient Blur: Android Q gradient blur generated

Bootleggers edit: Updated to 10, and reworked to go along with the Blur intensity switch

Change-Id: Ia377abd1f85cbce799419d2f7ecd0a54b78b146d
Signed-off-by: Anirudh Gupta <anirudhgupta109@gmail.com>
---
 core/java/android/provider/Settings.java      | 13 +++++++++++
 .../internal/util/aicp/ImageHelper.java       | 14 +++++++++++-
 packages/SystemUI/res/values/aicp_colors.xml  |  4 ++++
 .../statusbar/NotificationMediaManager.java   | 22 +++++++++++++++++--
 .../systemui/statusbar/phone/StatusBar.java   |  7 +++++-
 5 files changed, 56 insertions(+), 4 deletions(-)

diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index b2182f20097..6579561a7c5 100644
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -7272,6 +7272,19 @@ public final class Settings {
         private static final Validator OMNI_USE_OLD_MOBILETYPE_VALIDATOR =
                 BOOLEAN_VALIDATOR;
 
+        /**
+        * modify how the album art shows up on lockscreen
+        * 0 - normal
+        * 1 - grayscale
+        * 2 - accent tint
+        * 3 - blurry
+        * 4 - grayscale and blurry
+        * 5 - gradient blur (default)
+        * @hide
+        */
+        public static final String LOCKSCREEN_ALBUM_ART_FILTER = "lockscreen_album_art_filter";
+
+
         /***************************
          * unConv additions end
          ***************************/
diff --git a/core/java/com/android/internal/util/aicp/ImageHelper.java b/core/java/com/android/internal/util/aicp/ImageHelper.java
index 6581a9530a8..c36f657853c 100644
--- a/core/java/com/android/internal/util/aicp/ImageHelper.java
+++ b/core/java/com/android/internal/util/aicp/ImageHelper.java
@@ -59,7 +59,7 @@ public class ImageHelper {
         return grayscaleBitmap;
     }
 
-    private static Bitmap toGrayscale(Bitmap bmpOriginal) {
+    public static Bitmap toGrayscale(Bitmap bmpOriginal) {
         int width, height;
         height = bmpOriginal.getHeight();
         width = bmpOriginal.getWidth();
@@ -83,6 +83,18 @@ public class ImageHelper {
         return bmpGrayscale;
     }
 
+    public static Bitmap getGrayscaleBlurredImage(Context context, Bitmap image) {
+        return getGrayscaleBlurredImage(context, image, 3.5f);
+    }
+
+    public static Bitmap getGrayscaleBlurredImage(Context context, Bitmap image, float radius) {
+        Bitmap finalImage = Bitmap.createBitmap(
+                image.getWidth(), image.getHeight(),
+                Bitmap.Config.ARGB_8888);
+        finalImage = toGrayscale(getBlurredImage(context, image, radius));
+        return finalImage;
+    }
+
     public static Drawable resize(Context context, Drawable image, int size) {
         if (image == null || context == null) {
             return null;
diff --git a/packages/SystemUI/res/values/aicp_colors.xml b/packages/SystemUI/res/values/aicp_colors.xml
index 4657789afd5..33cea23dfbc 100644
--- a/packages/SystemUI/res/values/aicp_colors.xml
+++ b/packages/SystemUI/res/values/aicp_colors.xml
@@ -18,4 +18,8 @@
     <color name="recents_dismiss_all_background_color_ripple">#a8a8a8</color>
     <color name="recents_dismiss_all_icon_color">@*android:color/accent_device_default_light</color>
 
+    <!-- accent -->
+    <color name="system_light_accent">@*android:color/accent_device_default_light</color>
+    <color name="system_dark_accent">@*android:color/accent_device_default_dark</color>
+
 </resources>
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/NotificationMediaManager.java b/packages/SystemUI/src/com/android/systemui/statusbar/NotificationMediaManager.java
index 868ff7d97d2..2e8b3cc83e9 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/NotificationMediaManager.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/NotificationMediaManager.java
@@ -56,6 +56,7 @@ import android.widget.ImageView;
 
 import com.android.internal.config.sysui.SystemUiDeviceConfigFlags;
 import com.android.internal.statusbar.NotificationVisibility;
+import com.android.internal.util.aicp.ImageHelper;
 import com.android.systemui.Dependency;
 import com.android.systemui.Dumpable;
 import com.android.systemui.Interpolators;
@@ -154,6 +155,7 @@ public class NotificationMediaManager implements Dumpable {
 
     private boolean mShowCompactMediaSeekbar;
     private boolean mLockscreenMediaMetadata;
+    private int mAlbumArtFilter;
     private final DeviceConfig.OnPropertiesChangedListener mPropertiesChangedListener =
             new DeviceConfig.OnPropertiesChangedListener() {
         @Override
@@ -769,7 +771,22 @@ public class NotificationMediaManager implements Dumpable {
     };
 
     private Bitmap processArtwork(Bitmap artwork) {
-        return mMediaArtworkProcessor.processArtwork(mContext, artwork, getLockScreenMediaBlurLevel());
+        switch (mAlbumArtFilter) {
+            case 0:
+                // TODO: Implement a proper fix to use this recycled bitmap
+                return Bitmap.createBitmap(ImageHelper.getBlurredImage(mContext, artwork, 0.001f));
+            case 1:
+                return Bitmap.createBitmap(ImageHelper.toGrayscale(artwork));
+            case 2:
+                return Bitmap.createBitmap(ImageHelper.getColoredBitmap(new BitmapDrawable(mBackdropBack.getResources(), artwork), mContext.getResources().getColor(R.color.system_light_accent)));
+            case 3:
+                return Bitmap.createBitmap(ImageHelper.getBlurredImage(mContext, artwork, getLockScreenMediaBlurLevel()));
+            case 4:
+                return Bitmap.createBitmap(ImageHelper.getGrayscaleBlurredImage(mContext, artwork, getLockScreenMediaBlurLevel()));
+            case 5:
+            default:
+                return mMediaArtworkProcessor.processArtwork(mContext, artwork, getLockScreenMediaBlurLevel());
+        }
     }
 
     @MainThread
@@ -879,7 +896,8 @@ public class NotificationMediaManager implements Dumpable {
         return level;
     }
 
-    public void setLockscreenMediaMetadata(boolean lockscreenMediaMetadata) {
+    public void setLockscreenMediaMetadata(boolean lockscreenMediaMetadata, int lockscreenAlbumArtFilter) {
         mLockscreenMediaMetadata = lockscreenMediaMetadata;
+        mAlbumArtFilter = lockscreenAlbumArtFilter;
     }
 }
diff --git a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
index dd7b5551725..566b057ff1a 100644
--- a/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
+++ b/packages/SystemUI/src/com/android/systemui/statusbar/phone/StatusBar.java
@@ -766,6 +766,9 @@ public class StatusBar extends SystemUI implements DemoMode,
             resolver.registerContentObserver(Settings.System.getUriFor(
                     Settings.System.LOCKSCREEN_MEDIA_METADATA),
                     false, this, UserHandle.USER_ALL);
+            resolver.registerContentObserver(Settings.System.getUriFor(
+                    Settings.System.LOCKSCREEN_ALBUM_ART_FILTER),
+                    false, this, UserHandle.USER_ALL);
             resolver.registerContentObserver(Settings.Secure.getUriFor(
                     Settings.Secure.FP_SWIPE_TO_DISMISS_NOTIFICATIONS),
                     false, this, UserHandle.USER_ALL);
@@ -5603,7 +5606,9 @@ public class StatusBar extends SystemUI implements DemoMode,
     private void setLockscreenMediaArt() {
         boolean lockscreenMediaMetadata = Settings.System.getIntForUser(mContext.getContentResolver(),
                         Settings.System.LOCKSCREEN_MEDIA_METADATA, 0, UserHandle.USER_CURRENT) == 1;
-        mMediaManager.setLockscreenMediaMetadata(lockscreenMediaMetadata);
+        int lockscreenAlbumArtFilter = Settings.System.getIntForUser(mContext.getContentResolver(),
+                        Settings.System.LOCKSCREEN_ALBUM_ART_FILTER, 5, UserHandle.USER_CURRENT);
+        mMediaManager.setLockscreenMediaMetadata(lockscreenMediaMetadata, lockscreenAlbumArtFilter);
     }
 
     private void setFpToDismissNotifications() {
