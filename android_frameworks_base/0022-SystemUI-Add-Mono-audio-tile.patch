From 5c0a88b04cc119640477338583dec34044477fd1 Mon Sep 17 00:00:00 2001
From: ezio84 <brabus84@gmail.com>
Date: Thu, 26 Nov 2020 19:53:09 +0530
Subject: [PATCH] SystemUI: Add Mono audio tile

Add Mono audio tile (aka headphone in one ear only)

thanks buffal0b1ll for the suggestion!

Change-Id: I81b6bf5c6d21d3419c9cc2a5b52206f51a8e667d
---
 .../res/drawable/ic_mono_toggle_off.xml       | 28 ++++++
 .../res/drawable/ic_mono_toggle_on.xml        | 28 ++++++
 packages/SystemUI/res/values/aicp_config.xml  |  2 +-
 packages/SystemUI/res/values/aicp_strings.xml |  4 +
 .../systemui/qs/tileimpl/QSFactoryImpl.java   |  8 +-
 .../systemui/qs/tiles/MonoToggleTile.java     | 94 +++++++++++++++++++
 6 files changed, 162 insertions(+), 2 deletions(-)
 create mode 100644 packages/SystemUI/res/drawable/ic_mono_toggle_off.xml
 create mode 100644 packages/SystemUI/res/drawable/ic_mono_toggle_on.xml
 create mode 100644 packages/SystemUI/src/com/android/systemui/qs/tiles/MonoToggleTile.java

diff --git a/packages/SystemUI/res/drawable/ic_mono_toggle_off.xml b/packages/SystemUI/res/drawable/ic_mono_toggle_off.xml
new file mode 100644
index 00000000000..a935323d828
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_mono_toggle_off.xml
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+/**
+ * Copyright (c) 2009, The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="m 8,1.984375 c -0.55,0 -1,0.45 -1,1 v 4 H 5 v 6 h 6 v -6 H 9 v -4 c 0,-0.55 -0.45,-1 -1,-1 z m 8,0 c -0.55,0 -1,0.45 -1,1 v 4 h -2 v 6 h 6 v -6 h -2 v -4 c 0,-0.55 -0.45,-1 -1,-1 z M 5,13.554688 v 2 c 0,1.3 0.84,2.400312 2,2.820312 v 4.179688 H 9 V 18.375 c 1.16,-0.42 2,-1.520312 2,-2.820312 v -2 z m 8,0 v 2 c 0,1.3 0.84,2.400312 2,2.820312 v 4.179688 h 2 V 18.375 c 1.16,-0.41 2,-1.510313 2,-2.820312 v -2 z" />
+</vector>
diff --git a/packages/SystemUI/res/drawable/ic_mono_toggle_on.xml b/packages/SystemUI/res/drawable/ic_mono_toggle_on.xml
new file mode 100644
index 00000000000..5b5f5c2d33f
--- /dev/null
+++ b/packages/SystemUI/res/drawable/ic_mono_toggle_on.xml
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+/**
+ * Copyright (c) 2009, The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+-->
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24"
+    android:viewportHeight="24">
+
+    <path
+        android:fillColor="#FFFFFFFF"
+        android:pathData="m 9,13.554688 v 2 c 0,1.3 0.84,2.400312 2,2.820312 v 4.179688 h 2 V 18.375 c 1.16,-0.42 2,-1.520312 2,-2.820312 v -2 z M 12,1.984375 c -0.55,0 -1,0.45 -1,1 v 4 H 9 v 6 h 6 v -6 h -2 v -4 c 0,-0.55 -0.45,-1 -1,-1 z" />
+</vector>
diff --git a/packages/SystemUI/res/values/aicp_config.xml b/packages/SystemUI/res/values/aicp_config.xml
index 61398707803..a0750815558 100644
--- a/packages/SystemUI/res/values/aicp_config.xml
+++ b/packages/SystemUI/res/values/aicp_config.xml
@@ -23,7 +23,7 @@
 
     <!-- The default tiles to display in QuickSettings -->
     <string name="quick_settings_tiles_extra" translatable="false">
-        cpuinfo,compass,music,screenshot,scr,reboot,usb_tether,caffeine,aicp_extras,heads_up,smartpixels,adb_network,aod,locale,sound,onthego,sync,weather,soundsearch,dataswitch,hwkeys,immersive,gaming,fpsinfo,livedisplay,reading_mode,powershare,vpn
+        cpuinfo,compass,music,screenshot,scr,reboot,usb_tether,caffeine,aicp_extras,heads_up,smartpixels,adb_network,aod,locale,sound,onthego,sync,weather,soundsearch,dataswitch,hwkeys,immersive,gaming,fpsinfo,livedisplay,reading_mode,powershare,vpn,mono
     </string>
 
     <!-- The CPU temperature sensor path, defaults to empty -->
diff --git a/packages/SystemUI/res/values/aicp_strings.xml b/packages/SystemUI/res/values/aicp_strings.xml
index 6247f151d47..2e3186ad5a1 100644
--- a/packages/SystemUI/res/values/aicp_strings.xml
+++ b/packages/SystemUI/res/values/aicp_strings.xml
@@ -318,4 +318,8 @@
 
     <!-- Shows when people have clicked on the custom lockscreen shortcut [CHAR LIMIT=60] -->
     <string name="custom_hint">Swipe from icon to launch</string>
+
+    <string name="quick_settings_monotoggle_tile">Audio mode</string>
+    <string name="quick_settings_monotoggle_tile_mono">Mono audio</string>
+    <string name="quick_settings_monotoggle_tile_stereo">Stereo audio</string>
 </resources>
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSFactoryImpl.java b/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSFactoryImpl.java
index 38df6e62d64..d52ab5cfb72 100644
--- a/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSFactoryImpl.java
+++ b/packages/SystemUI/src/com/android/systemui/qs/tileimpl/QSFactoryImpl.java
@@ -51,6 +51,7 @@ import com.android.systemui.qs.tiles.IntentTile;
 import com.android.systemui.qs.tiles.LocaleTile;
 import com.android.systemui.qs.tiles.LiveDisplayTile;
 import com.android.systemui.qs.tiles.LocationTile;
+import com.android.systemui.qs.tiles.MonoToggleTile;
 import com.android.systemui.qs.tiles.MusicTile;
 import com.android.systemui.qs.tiles.NfcTile;
 import com.android.systemui.qs.tiles.NightDisplayTile;
@@ -113,6 +114,7 @@ public class QSFactoryImpl implements QSFactory {
     private final Provider<PowerShareTile> mPowerShareTileProvider;
     private final Provider<ReadingModeTile> mReadingModeTileProvider;
     private final Provider<VpnTile> mVpnTileProvider;
+    private final Provider<MonoToggleTile> mMonoToggleTileProvider;
 
     private QSTileHost mHost;
 
@@ -145,7 +147,8 @@ public class QSFactoryImpl implements QSFactory {
             Provider<LiveDisplayTile> liveDisplayTileProvider,
             Provider<ReadingModeTile> readingModeTileProvider,
             Provider<PowerShareTile> powerShareTileProvider,
-            Provider<VpnTile> vpnTileProvider) {
+            Provider<VpnTile> vpnTileProvider,
+            Provider<MonoToggleTile> monoToggleTileProvider) {
         mWifiTileProvider = wifiTileProvider;
         mBluetoothTileProvider = bluetoothTileProvider;
         mCellularTileProvider = cellularTileProvider;
@@ -175,6 +178,7 @@ public class QSFactoryImpl implements QSFactory {
         mReadingModeTileProvider = readingModeTileProvider;
         mPowerShareTileProvider = powerShareTileProvider;
         mVpnTileProvider = vpnTileProvider;
+        mMonoToggleTileProvider = monoToggleTileProvider;
     }
 
     public void setHost(QSTileHost host) {
@@ -285,6 +289,8 @@ public class QSFactoryImpl implements QSFactory {
                 return mPowerShareTileProvider.get();
             case "vpn":
                 return mVpnTileProvider.get();
+            case "mono":
+                return mMonoToggleTileProvider.get();
         }
 
         // Intent tiles.
diff --git a/packages/SystemUI/src/com/android/systemui/qs/tiles/MonoToggleTile.java b/packages/SystemUI/src/com/android/systemui/qs/tiles/MonoToggleTile.java
new file mode 100644
index 00000000000..8b36bae30da
--- /dev/null
+++ b/packages/SystemUI/src/com/android/systemui/qs/tiles/MonoToggleTile.java
@@ -0,0 +1,94 @@
+/*
+ * Copyright (C) 2014 The Android Open Source Project
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.systemui.qs.tiles;
+
+import android.content.ComponentName;
+import android.content.Context;
+import android.content.Intent;
+import android.os.UserHandle;
+import android.provider.Settings;
+import android.service.quicksettings.Tile;
+import com.android.internal.logging.nano.MetricsProto.MetricsEvent;
+import com.android.systemui.qs.QSHost;
+import com.android.systemui.plugins.qs.QSTile.BooleanState;
+import com.android.systemui.qs.tileimpl.QSTileImpl;
+import com.android.systemui.R;
+
+import javax.inject.Inject;
+
+/** Quick settings tile: MonoToggleTile **/
+public class MonoToggleTile extends QSTileImpl<BooleanState> {
+
+    @Inject
+    public MonoToggleTile(QSHost host) {
+        super(host);
+    }
+
+    @Override
+    public BooleanState newTileState() {
+        BooleanState state = new BooleanState();
+        state.handlesLongClick = true;
+        return state;
+    }
+
+    @Override
+    public CharSequence getTileLabel() {
+        return mContext.getString(R.string.quick_settings_monotoggle_tile);
+    }
+
+    @Override
+    public int getMetricsCategory() {
+        return MetricsEvent.CUSTOM_QUICK_TILES;
+    }
+
+    @Override
+    public void handleSetListening(boolean listening) {}
+
+    @Override
+    public void handleClick() {
+        Settings.System.putIntForUser(mContext.getContentResolver(),
+                Settings.System.MASTER_MONO, isMonoEnabled() ? 0 : 1,
+                UserHandle.USER_CURRENT);
+        refreshState();
+    }
+
+    private boolean isMonoEnabled() {
+        return Settings.System.getIntForUser(mContext.getContentResolver(),
+                    Settings.System.MASTER_MONO, 0, UserHandle.USER_CURRENT) == 1;
+    }
+
+    @Override
+    public Intent getLongClickIntent() {
+        return new Intent().setComponent(new ComponentName(
+            "com.android.settings", "com.android.settings.Settings$AccessibilitySettingsActivity"));
+    }
+
+    @Override
+    protected void handleUpdateState(BooleanState state, Object arg) {
+        if (isMonoEnabled()) {
+            state.label = mContext.getString(R.string.quick_settings_monotoggle_tile_mono);
+            state.icon = ResourceIcon.get(R.drawable.ic_mono_toggle_on);
+            state.contentDescription =  mContext.getString(
+                    R.string.quick_settings_monotoggle_tile_mono);
+        } else {
+            state.label = mContext.getString(R.string.quick_settings_monotoggle_tile_stereo);
+            state.icon = ResourceIcon.get(R.drawable.ic_mono_toggle_off);
+            state.contentDescription =  mContext.getString(
+                    R.string.quick_settings_monotoggle_tile_stereo);
+        }
+    }
+}
