From c9b24d69a7759f25e7ccb7d3c02a8fbde4c7fb87 Mon Sep 17 00:00:00 2001
From: George Zacharia <george.zcharia@gmail.com>
Date: Thu, 20 Apr 2023 09:52:10 +0530
Subject: [PATCH] Adapt ControllerTest

---
 .../java/web/controllers/ControllerTest.java  | 41 ++++++++++++++++---
 1 file changed, 36 insertions(+), 5 deletions(-)

diff --git a/generators/controller/templates/app/src/test/java/web/controllers/ControllerTest.java b/generators/controller/templates/app/src/test/java/web/controllers/ControllerTest.java
index ea8dd02..4ef969c 100644
--- a/generators/controller/templates/app/src/test/java/web/controllers/ControllerTest.java
+++ b/generators/controller/templates/app/src/test/java/web/controllers/ControllerTest.java
@@ -7,6 +7,9 @@ import static org.hamcrest.Matchers.hasSize;
 import static org.mockito.ArgumentMatchers.any;
 import static org.mockito.BDDMockito.given;
 import static org.mockito.Mockito.doNothing;
+import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.csrf;
+import static org.springframework.security.test.web.servlet.request.SecurityMockMvcRequestPostProcessors.user;
+import static org.springframework.security.test.web.servlet.setup.SecurityMockMvcConfigurers.springSecurity;
 import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.delete;
 import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get;
 import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post;
@@ -32,11 +35,23 @@ import org.springframework.data.domain.PageImpl;
 import org.springframework.http.MediaType;
 import org.springframework.test.context.ActiveProfiles;
 import org.springframework.test.web.servlet.MockMvc;
+import org.springframework.test.web.servlet.request.MockMvcRequestBuilders;
+import org.springframework.test.web.servlet.setup.MockMvcBuilders;
+import org.springframework.web.context.WebApplicationContext;
+import org.zalando.problem.jackson.ProblemModule;
+import org.zalando.problem.violations.ConstraintViolationProblemModule;
+
+import java.util.ArrayList;
+import java.util.List;
+import java.util.Optional;
+import java.util.UUID;
 
 @WebMvcTest(controllers = <%= entityName %>Controller.class)
 @ActiveProfiles(PROFILE_TEST)
 class <%= entityName %>ControllerTest {
 
+    @Autowired private WebApplicationContext webApplicationContext;
+
     @Autowired private MockMvc mockMvc;
 
     @MockBean private <%= entityName %>Service <%= entityVarName %>Service;
@@ -47,10 +62,21 @@ class <%= entityName %>ControllerTest {
 
     @BeforeEach
     void setUp() {
+        mockMvc =
+                MockMvcBuilders.webAppContextSetup(webApplicationContext)
+                        .defaultRequest(
+                                MockMvcRequestBuilders.get("<%= basePath %>")
+                                        .with(user("username").roles("USER")))
+                        .apply(springSecurity())
+                        .build();
+
         this.<%= entityVarName %>List = new ArrayList<>();
         this.<%= entityVarName %>List.add(new <%= entityName %>(1L, "text 1"));
         this.<%= entityVarName %>List.add(new <%= entityName %>(2L, "text 2"));
         this.<%= entityVarName %>List.add(new <%= entityName %>(3L, "text 3"));
+
+        objectMapper.registerModule(new ProblemModule());
+        objectMapper.registerModule(new ConstraintViolationProblemModule());
     }
 
     @Test
@@ -102,6 +128,7 @@ class <%= entityName %>ControllerTest {
         this.mockMvc
                 .perform(
                         post("<%= basePath %>")
+                                .with(csrf())
                                 .contentType(MediaType.APPLICATION_JSON)
                                 .content(objectMapper.writeValueAsString(<%= entityVarName %>)))
                 .andExpect(status().isCreated())
@@ -116,15 +143,17 @@ class <%= entityName %>ControllerTest {
         this.mockMvc
                 .perform(
                         post("<%= basePath %>")
+                                .with(csrf())
                                 .contentType(MediaType.APPLICATION_JSON)
                                 .content(objectMapper.writeValueAsString(<%= entityVarName %>)))
                 .andExpect(status().isBadRequest())
                 .andExpect(header().string("Content-Type", is("application/problem+json")))
-                .andExpect(jsonPath("$.type", is("about:blank")))
+                .andExpect(
+                        jsonPath(
+                                "$.type",
+                                is("https://zalando.github.io/problem/constraint-violation")))
                 .andExpect(jsonPath("$.title", is("Constraint Violation")))
                 .andExpect(jsonPath("$.status", is(400)))
-                .andExpect(jsonPath("$.detail", is("Invalid request content.")))
-                .andExpect(jsonPath("$.instance", is("<%= basePath %>")))
                 .andExpect(jsonPath("$.violations", hasSize(1)))
                 .andExpect(jsonPath("$.violations[0].field", is("text")))
                 .andExpect(jsonPath("$.violations[0].message", is("Text cannot be empty")))
@@ -142,6 +171,7 @@ class <%= entityName %>ControllerTest {
         this.mockMvc
                 .perform(
                         put("<%= basePath %>/{id}", <%= entityVarName %>.getId())
+                                .with(csrf())
                                 .contentType(MediaType.APPLICATION_JSON)
                                 .content(objectMapper.writeValueAsString(<%= entityVarName %>)))
                 .andExpect(status().isOk())
@@ -157,6 +187,7 @@ class <%= entityName %>ControllerTest {
         this.mockMvc
                 .perform(
                         put("<%= basePath %>/{id}", <%= entityVarName %>Id)
+                                .with(csrf())
                                 .contentType(MediaType.APPLICATION_JSON)
                                 .content(objectMapper.writeValueAsString(<%= entityVarName %>)))
                 .andExpect(status().isNotFound());
@@ -170,7 +201,7 @@ class <%= entityName %>ControllerTest {
         doNothing().when(<%= entityVarName %>Service).delete<%= entityName %>ById(<%= entityVarName %>.getId());
 
         this.mockMvc
-                .perform(delete("<%= basePath %>/{id}", <%= entityVarName %>.getId()))
+                .perform(delete("<%= basePath %>/{id}", <%= entityVarName %>.getId()).with(csrf()))
                 .andExpect(status().isOk())
                 .andExpect(jsonPath("$.text", is(<%= entityVarName %>.getText())));
     }
@@ -181,7 +212,7 @@ class <%= entityName %>ControllerTest {
         given(<%= entityVarName %>Service.find<%= entityName %>ById(<%= entityVarName %>Id)).willReturn(Optional.empty());
 
         this.mockMvc
-                .perform(delete("<%= basePath %>/{id}", <%= entityVarName %>Id))
+                .perform(delete("<%= basePath %>/{id}", <%= entityVarName %>Id).with(csrf()))
                 .andExpect(status().isNotFound());
     }
 }
